SET(CPP_DEFINES)
SET(CPP_LINK_LIBS ${LIBNIFALCON_CPP})

INCLUDE_DIRECTORIES("${PROJECT_PATH}/src/cpp/" ${INC_DIRS})
LINK_DIRECTORIES(${LIBRARY_OUTPUT_PATH} ${LINK_DIRS})

IF(LIBUSB_1_FOUND)
  SET(CPP_DEFINES ${CPP_DEFINES} -DLIBUSB)
  SET(CPP_LINK_LIBS ${CPP_LINK_LIBS} ${LIBNIFALCON_CPP_COMM_PREFIX}_libusb ${LIBUSB_1_LIBRARIES}) 
ELSEIF(LIBFTDI_FOUND)
  SET(CPP_DEFINES ${CPP_DEFINES} -DLIBFTDI)
  SET(CPP_LINK_LIBS ${CPP_LINK_LIBS} ${LIBNIFALCON_CPP_COMM_PREFIX}_libftdi ${LIBFTDI_LIBRARIES}) 
ELSEIF(LIBFTD2XX_FOUND)
  SET(CPP_DEFINES ${CPP_DEFINES} -DLIBFTD2XX)
  SET(CPP_LINK_LIBS ${CPP_LINK_LIBS} ${LIBNIFALCON_CPP_COMM_PREFIX}_ftd2xx ${LIBFTD2XX_LIBRARIES})
ENDIF(LIBUSB_1_FOUND)

#ADD_SUBDIRECTORY(findfalcons)
ADD_SUBDIRECTORY(findfalcons_cpp)
IF(Boost_PROGRAM_OPTIONS_FOUND)
  ADD_SUBDIRECTORY(falcon_test_cli)
ELSE(Boost_PROGRAM_OPTIONS_FOUND)
  MESSAGE("Cannot compile falcon_test_cli - Missing Boost Program Options")
ENDIF(Boost_PROGRAM_OPTIONS_FOUND)

IF(Boost_PROGRAM_OPTIONS_FOUND)
  ADD_SUBDIRECTORY(falcon_mouse)
ELSE(Boost_PROGRAM_OPTIONS_FOUND)
  MESSAGE("Cannot compile falcon_mouse - Missing Boost Program Options")
ENDIF(Boost_PROGRAM_OPTIONS_FOUND)

